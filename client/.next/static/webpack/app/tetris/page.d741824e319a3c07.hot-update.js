"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/tetris/page",{

/***/ "(app-pages-browser)/./src/app/tetris/RenderTetris.js":
/*!****************************************!*\
  !*** ./src/app/tetris/RenderTetris.js ***!
  \****************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RenderTetris: function() { return /* binding */ RenderTetris; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n\nconst RenderTetris = (param)=>{\n    let { children, tick, setTick } = param;\n    return; // <main id=\"main\">\n//   <Button onClick={() => clearInterval(intervalId)}>{\"stop game\"}</Button>\n//   <div className=\"playground\" id=\"playGround\">\n//     <div className=\"game-grid\" id=\"gameGrid\" ref={gameGrid}></div>\n//   </div>\n// </main>;\n};\n_c = RenderTetris;\nvar _c;\n$RefreshReg$(_c, \"RenderTetris\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9hcHAvdGV0cmlzL1JlbmRlclRldHJpcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBa0M7QUFDM0IsTUFBTUMsZUFBZTtRQUFDLEVBQUVDLFFBQVEsRUFBRUMsSUFBSSxFQUFFQyxPQUFPLEVBQUU7SUFDdEQsUUFBUSxtQkFBbUI7QUFDM0IsNkVBQTZFO0FBQzdFLGlEQUFpRDtBQUNqRCxxRUFBcUU7QUFDckUsV0FBVztBQUNYLFdBQVc7QUFDYixFQUFFO0tBUFdIIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3NyYy9hcHAvdGV0cmlzL1JlbmRlclRldHJpcy5qcz8yZTBmIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHVzZUVmZmVjdCB9IGZyb20gXCJyZWFjdFwiO1xuZXhwb3J0IGNvbnN0IFJlbmRlclRldHJpcyA9ICh7IGNoaWxkcmVuLCB0aWNrLCBzZXRUaWNrIH0pID0+IHtcbiAgcmV0dXJuOyAvLyA8bWFpbiBpZD1cIm1haW5cIj5cbiAgLy8gICA8QnV0dG9uIG9uQ2xpY2s9eygpID0+IGNsZWFySW50ZXJ2YWwoaW50ZXJ2YWxJZCl9PntcInN0b3AgZ2FtZVwifTwvQnV0dG9uPlxuICAvLyAgIDxkaXYgY2xhc3NOYW1lPVwicGxheWdyb3VuZFwiIGlkPVwicGxheUdyb3VuZFwiPlxuICAvLyAgICAgPGRpdiBjbGFzc05hbWU9XCJnYW1lLWdyaWRcIiBpZD1cImdhbWVHcmlkXCIgcmVmPXtnYW1lR3JpZH0+PC9kaXY+XG4gIC8vICAgPC9kaXY+XG4gIC8vIDwvbWFpbj47XG59O1xuIl0sIm5hbWVzIjpbInVzZUVmZmVjdCIsIlJlbmRlclRldHJpcyIsImNoaWxkcmVuIiwidGljayIsInNldFRpY2siXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/app/tetris/RenderTetris.js\n"));

/***/ })

});